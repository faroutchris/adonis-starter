version: '3.8'

services:
  adonis:
    image: adonis_web
    container_name: adonis_web
    restart: unless-stopped
    build:
      context: .
      target: build
    ports:
      - ${PORT}:${PORT}
      - 9229:9229
    # env_file:
    #   - .env
    environment:
      TZ: ${TZ}
      PORT: ${PORT}
      HOST: ${HOST}
      LOG_LEVEL: ${LOG_LEVEL}
      APP_KEY: ${APP_KEY}
      NODE_ENV: ${NODE_ENV}
      SESSION_DRIVER: ${SESSION_DRIVER}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE: ${DB_DATABASE}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_IGNORE_TLS: ${SMTP_IGNORE_TLS}
    command: node build/bin/server.js
    # todo -> for dev containers:
    # volumes:
    #   - ./:/home/node/app
    #   - /home/node/app/node_modules
    depends_on:
      db:
        condition: service_healthy

  mailcrab:
    image: marlonb/mailcrab:latest
    ports:
      - '1080:1080'
      - '1025:1025'
    networks: [default]

  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_DATABASE}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${DB_USER} -d ${DB_DATABASE}'"]
      interval: 10s
      timeout: 3s
      retries: 3

  adminer:
    image: adminer
    restart: always
    ports:
      - 9090:8080

volumes:
  pgdata:
